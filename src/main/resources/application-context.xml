<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-4.0.xsd">

    <!--
        配置bean
        class : bean的全类名 ， 通过反射的方式在IOC容器中创建Bean , 所以要求Bean中必须有无参构造器
        id : 表示容器中的bean , id必须为唯一
    -->

    <bean id="User" class="com.zeno.bean.User">
        <!--属性注入-->
        <property name="name" value="zeno"/>
    </bean>

    <!--
        配置构造器注入
    -->
    <bean id="book" class="com.zeno.bean.Book">
        <!--构造器注入-->
        <!--属性值，可以使用value属性之外，还可以使用value标签进行赋值-->
        <!--当内容有特殊字符时 ， 需要使用<![CDATA[xxxx]]> 来进行包含-->
        <constructor-arg type="java.lang.String">
            <value><![CDATA[<Android NDK开发之旅>]]></value>
        </constructor-arg>
        <constructor-arg value="zeno" type="java.lang.String"/>
        <constructor-arg value="30" type="java.lang.Double"/>
    </bean>

    <bean id="book2" class="com.zeno.bean.Book">
        <!--构造器注入-->
        <!--
            重载构造器 ， 可以通过指定参数类型来区分 , index表示参数的索引 ， 索引和类型可以混合使用
        -->
        <constructor-arg value="Android开发艺术探索" index="0"/>
        <constructor-arg value="任玉刚" index="1"/>
        <constructor-arg value="30000" type="int"/>
    </bean>


    <bean id="user2" class="com.zeno.bean.User">
        <property name="name" value="gorden"/>
        <!--注入List-->
        <property name="books">
            <list>
                <!--匿名bean-->
                <bean class="com.zeno.bean.Book">
                    <constructor-arg value="国富论"/>
                    <constructor-arg value="斯密斯"/>
                    <constructor-arg value="20" type="java.lang.Double"/>
                </bean>
                <!--引用外部bean-->
                <ref bean="book"/>
                <ref bean="book2"/>
            </list>
        </property>
        <!--注入map-->
        <property name="address">
            <map>
                <entry key="home" value="湖南·常德"/>
                <entry key="job" value="湖南·长沙"/>
            </map>
        </property>
    </bean>

    <bean id="user3" class="com.zeno.bean.User">
        <property name="name" value="lily"/>
        <!--引用外部独立的list-->
        <property name="books" ref="books"/>
        <!--外部引入map-->
        <property name="address" ref="address"/>
    </bean>

    <!--外部list bean-->
    <util:list id="books">
        <!--匿名bean-->
        <bean class="com.zeno.bean.Book">
            <constructor-arg value="平凡的世界"/>
            <constructor-arg value="路遥"/>
            <constructor-arg value="5000" type="int"/>
        </bean>
        <!--引用外部bean-->
        <ref bean="book"/>
        <ref bean="book2"/>
    </util:list>

    <!--外部map bean-->
    <util:map id="address">
        <entry key="home" value="湖南·常德"/>
        <entry key="job" value="广东·深圳"/>
    </util:map>

</beans>